(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))g(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&g(d)}).observe(document,{childList:!0,subtree:!0});function u(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function g(e){if(e.ep)return;e.ep=!0;const s=u(e);fetch(e.href,s)}})();window.appLoaded=!0;document.addEventListener("DOMContentLoaded",()=>{const f=document.getElementById("word-display"),c=document.getElementById("feedback"),u=document.getElementById("next-button"),g=document.getElementById("score"),e=document.getElementById("attempts"),s="аеёиоуыэюя";let d=[],h=-1,L=0,C=0,w=!1;async function E(){try{const t=await fetch("/russian-stress-practice/phonetics.txt");if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);const i=await t.text();I(i),d.length>0?(N(d),b()):(f.textContent="No words found in file.",u.disabled=!0)}catch(r){console.error("Error loading or parsing words file:",r),f.textContent="Error loading words.",c.textContent="Could not load phonetics.txt. Please check the file and console.",c.className="feedback incorrect",u.disabled=!0}}function I(r){const t=r.trim().split(`
`).map(o=>o.trim()).filter(o=>o.length>0),i=[];for(const o of t){const x=o.split(";").map(p=>p.trim());for(const p of x){if(p.length===0)continue;const a=p.split(",").map(n=>n.trim());for(const n of a){if(n.length===0)continue;const l=n.toLowerCase();let y=-1;for(let m=0;m<n.length;m++)if(n[m]!==l[m]&&s.includes(l[m])){y=m;break}if(y===-1){console.warn(`Could not find stressed vowel in: "${n}"`);continue}i.push({word:l,stressedIndex:y,stressedWord:n})}}}d=i}function b(){if(d.length===0)return;w=!1,h=(h+1)%d.length;const r=d[h];f.innerHTML="",f.classList.remove("answered"),c.textContent="",c.className="feedback",u.disabled=!0,r.word.split("").forEach((t,i)=>{const o=document.createElement("span");o.textContent=t,s.includes(t.toLowerCase())&&(o.classList.add("vowel"),o.dataset.index=i.toString(),o.addEventListener("click",S)),f.appendChild(o)})}function S(r){if(w)return;w=!0,f.classList.add("answered");const t=r.target,i=parseInt(t.dataset.index||"",10),o=d[h].stressedIndex,x=d[h].stressedWord;C++,e.textContent=C.toString(),f.querySelectorAll("span.vowel").forEach(a=>{var l;const n=a.cloneNode(!0);(l=a.parentNode)==null||l.replaceChild(n,a)});const p=Array.from(f.querySelectorAll("span"));if(i===o){L++,g.textContent=L.toString(),c.textContent="Correct!",c.className="feedback correct";const a=p.find(n=>parseInt(n.dataset.index||"",10)===o);a&&a.classList.add("correct-stress")}else{c.textContent=`Incorrect. Correct: ${x}`,c.className="feedback incorrect";const a=p.find(l=>parseInt(l.dataset.index||"",10)===o),n=p.find(l=>parseInt(l.dataset.index||"",10)===i);a&&a.classList.add("correct-stress"),n&&n.classList.add("incorrect-guess")}u.disabled=!1}function N(r){for(let t=r.length-1;t>0;t--){const i=Math.floor(Math.random()*(t+1));[r[t],r[i]]=[r[i],r[t]]}}u.addEventListener("click",b),u.disabled=!0,E()});
